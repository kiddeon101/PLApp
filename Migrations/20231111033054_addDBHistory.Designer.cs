// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PLApp.Entity;

#nullable disable

namespace PLApp.Migrations
{
    [DbContext(typeof(TableContext))]
    [Migration("20231111033054_addDBHistory")]
    partial class addDBHistory
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PLApp.Entity.TableEntity.BankAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountCurrency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("OpenBalanceAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("OpenBalanceDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("PLApp.Entity.TableEntity.BankDetailedTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BankTransactionId")
                        .HasColumnType("int");

                    b.Property<int>("accountMonth")
                        .HasColumnType("int");

                    b.Property<int>("accountYear")
                        .HasColumnType("int");

                    b.Property<double>("amount")
                        .HasColumnType("float");

                    b.Property<string>("category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("invoiceNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isIncomming")
                        .HasColumnType("bit");

                    b.Property<string>("projectNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("purchaseOrderNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BankTransactionId");

                    b.ToTable("BankDetailedTransactions");
                });

            modelBuilder.Entity("PLApp.Entity.TableEntity.BankTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("bankAccountId")
                        .HasColumnType("int");

                    b.Property<string>("details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("documentCategory")
                        .HasColumnType("int");

                    b.Property<double>("inwardAmount")
                        .HasColumnType("float");

                    b.Property<double>("outwardAmount")
                        .HasColumnType("float");

                    b.Property<string>("recipientAccountNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("recipientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("statementType")
                        .HasColumnType("int");

                    b.Property<DateTime>("transactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("transactionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("voucherNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("bankAccountId");

                    b.ToTable("BankTransactions");
                });

            modelBuilder.Entity("PLApp.Entity.TableEntity.DBBackupHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("backupDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("fileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BackupHistory");
                });

            modelBuilder.Entity("PLApp.Entity.TableEntity.BankDetailedTransaction", b =>
                {
                    b.HasOne("PLApp.Entity.TableEntity.BankTransaction", "BankTransaction")
                        .WithMany("BankDetailedTransactions")
                        .HasForeignKey("BankTransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankTransaction");
                });

            modelBuilder.Entity("PLApp.Entity.TableEntity.BankTransaction", b =>
                {
                    b.HasOne("PLApp.Entity.TableEntity.BankAccount", "bankAccount")
                        .WithMany("BankTransactions")
                        .HasForeignKey("bankAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("bankAccount");
                });

            modelBuilder.Entity("PLApp.Entity.TableEntity.BankAccount", b =>
                {
                    b.Navigation("BankTransactions");
                });

            modelBuilder.Entity("PLApp.Entity.TableEntity.BankTransaction", b =>
                {
                    b.Navigation("BankDetailedTransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
